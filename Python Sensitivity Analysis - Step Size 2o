import jax
import jax.numpy as jnp
import matplotlib.pyplot as plot
import math


C = [100.]
MaxT = 30
u_0 = jnp.array([1,1])

def mult(v,a):
    return jnp.multiply(v, a)

def func(X,C):
        x,y = X
        a = C
        output = [y,-2*x]
        return jnp.array(output)

def f(X):
    return func(X,C)


def HK4(a):
    def f(X):
        return func(X,a)

    steps = a[0]
   
    h = MaxT/steps
    
    u = jnp.zeros([len(u_0),int(steps)])
    u = u.at[:,0].set(u_0)

    for i in range(int(steps)):
        k1 = f(u[:,i])
        k2 = f(u[:,i] + (0.5*h)*k1)
        k3 = f(u[:,i] + (0.5*h)*k2)
        k4 = f(u[:,i] + h*k3)
        k = u[:,i]+h*(1/6)*(k1+ 2*k2+2*k3+ k4)

        u = u.at[:,i+1].set(k)

    return u

#print(ode(C))
#plot.plot(x,y)

x =  jax.jacfwd(HK4)(C)


def newton(a):
    def f(X):
        return func(X,a)

    steps = a[0]
    
    h = MaxT/steps
    
    u = jnp.zeros([len(u_0),int(steps)])
    u = u.at[:,0].set(u_0)

    for i in range(int(steps)):
        k = u[:,i]+f(h*u[:,i])
        u = u.at[:,i+1].set(k)

    return u

#print(ode(C))
#plot.plot(x,y)

y =  jax.jacfwd(newton)(C)

plot.plot(range(int(C[0])),x[0][0],label = "HK4")
plot.plot(range(int(C[0])),y[0][0],label = "Newton")
plot.legend()
